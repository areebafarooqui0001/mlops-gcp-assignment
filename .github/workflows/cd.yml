name: Continuous Deployment to GKE

on:
  pull_request:
    branches:
      - main

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER_NAME: mlops-assignment-cluster
  GKE_ZONE: us-central1
  ARTIFACT_REGISTRY_LOCATION: us-central1
  ARTIFACT_REGISTRY_REPO: mlops-artifacts

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
      pull-requests: 'write'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Authenticate to Google Cloud
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

    - name: Set up Cloud SDK
      uses: 'google-github-actions/setup-gcloud@v2'

    - name: Install gke-gcloud-auth-plugin
      run: gcloud components install gke-gcloud-auth-plugin --quiet

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip -q
        pip install -r requirements.txt -q

    - name: Run training script to generate artifacts
      run: python train.py

    - name: Configure Docker
      run: gcloud auth configure-docker ${{ env.ARTIFACT_REGISTRY_LOCATION }}-docker.pkg.dev --quiet

    - name: Build and Push Docker image
      id: build-image
      run: |
        IMAGE_NAME="${{ env.ARTIFACT_REGISTRY_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/iris-classifier:${{ github.sha }}"
        docker build -t $IMAGE_NAME .
        docker push $IMAGE_NAME
        echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_OUTPUT

    - name: Deploy to GKE
      run: |
        gcloud container clusters get-credentials $GKE_CLUSTER_NAME --zone $GKE_ZONE
        sed -i "s|DOCKER_IMAGE_PLACEHOLDER|${{ steps.build-image.outputs.IMAGE_NAME }}|g" k8s/deployment.yaml
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
        kubectl apply -f k8s/hpa.yaml
        kubectl rollout status deployment mlops-assignment-app

    - name: Generate CML Report
      env:
        REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        sleep 60
        SERVICE_IP=$(kubectl get service iris-classifier-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
        
        echo "ðŸš€ Deployment to dev successful!" > report.md
        echo "âœ… Model API is available at: http://$SERVICE_IP" >> report.md
        echo "### Example Usage:" >> report.md
        echo "\`\`\`bash" >> report.md
        echo "curl -X 'POST' 'http://$SERVICE_IP/predict' \\" >> report.md
        echo "  -H 'accept: application/json' -H 'Content-Type: application/json' \\" >> report.md
        echo "  -d '{\"sepal_length\": 5.1, \"sepal_width\": 3.5, \"petal_length\": 1.4, \"petal_width\": 0.2}'" >> report.md
        echo "\`\`\`" >> report.md
        
        npm install -g @dvcorg/cml
        cml comment create report.md